ta estructura consta de una serie de carpetas y archivos que nos hacen trabajar de forma ordenada y eficiente. La estructura es la siguiente:

Gemfile el archivo donde declaramos las dependencias (gemas de nuestro proyecto)
app: organiza los componentes de nuestra aplicaion
app/assets: son los archivos requeridos por nuestra aplicacion del lado del front-end, esto es, archivos de javascript, css o imagenes
app/controllers: es donde se ubican los controladores de Rails que son los responsables de conectar las vistas con los modelos
app/helpers: contiene clases y metodos que nos ayudan a extraer logica reutilizable o complicada en la logica
app/mailers: es donde se ubican los objetos encargados de tareas de envio de emails

app/models: contiene las clases que contienen la logica de nuestra aplicacion y sonla sencargadas de conectarse a la base de datos
config: los archivos de configuracion
config/database.yml: contiene toda la info necesaria para la configuracion y coneccion a la base de datos
config/environments/: rails maneja tres entornos de trabajo: desarollo (development), pruebas (test) y produccion (production). Rails es bastante inteligente para ofrecernos valores por default adecuados a cada entorno, pero podemos configurarlos segun nuestras necesidades

config/routes.rb: es el archivo donde vienes las indicaciones de como mapear las rutas de nuestra aplicacion a los controladores de la misma

db: contiene archivos relacionados a la base de datos
db/migrate:  asi se encuentran las migraciones que vamos haciendo para nuestra aplicacion
db/schema: la estructura actual de nuestra base de datos

log: bitacoras. El registro de eventos que pasan en nuestra aplicacion

public:  los archivos publicos como paginas estaticas

